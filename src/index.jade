extends layout

block vars
  - var title = 'DMX Table Viewer'

block styles
  link(rel='stylesheet', href='#{base}/bootstrap/bootstrap.css')
  link(rel='stylesheet', href='#{base}/css/index.css')

block scripts
  script(src='#{base}/requirejs/require.js', data-main='#{base}/js/index.js')

  script(type='text/html', id='compositeTemplate')
    // ko if: $root.getStore().isTypeActiveValue(type)
    td
      span(data-bind='text: value, attr: { id: id }')
    // /ko
    // ko template: { name: "compositeTemplate", foreach: composite }
    // /ko

  script(type='text/html', id='childTemplate')
    input(type='checkbox', data-bind='checked: isActive')
    | »
    a(href='#', rel='tooltip', data-bind='text: name, click: $root.chooseType, attr: { title: uri + " / " + dataType }')

  script(type='text/html', id='childTypeTemplate')
    // ko template: { name: "childTemplate", data: c }
    // /ko
    if debug
      |  r:
      span(data-bind='text: p.depth() - c.depth()')
      |  c:
      span(data-bind='text: c.cols')
      |  d:
      span(data-bind='text: c.depth')
    ul(data-bind='foreach: c.childTypes')
      li(data-bind='template: { name: "childTypeTemplate", data: { c: $data, p: $parent.c } }')


block content
  body(style='display: none')

    #dialog.modal
      .modal-dialog
        .modal-content
          .modal-header
            h3.modal-title(data-bind='text: getDialog().getTitle')
          .modal-body
            p(data-bind='text: getDialog().getMessage')

    nav.navbar.navbar-default.navbar-fixed-top
      .container-fluid
        .navbar-header
          button.navbar-toggle.collapsed(type='button', data-toggle='collapse', data-target='#navbar')
            span.sr-only Toggle navigation
            span.icon-bar
            span.icon-bar
            span.icon-bar
          a.navbar-brand(href='#')= title
        #navbar.collapse.navbar-collapse
          ul.nav.navbar-nav(data-bind='visible: getStore().getTypes().length > 0')
            li.dropdown
              a.dropdown-toggle(href='#', data-toggle='dropdown')
                span(data-bind='text: getActualDataTypeName()')
                b.caret
              ul.dropdown-menu(data-bind='foreach: getStore().getDataTypes')
                li
                  a(href='#', data-bind='text: name, click: $parent.chooseDataType')
            li.dropdown
              a.dropdown-toggle(href='#', data-toggle='dropdown')
                span(data-bind='text: getActualTypeName()')
                b.caret
              ul.dropdown-menu(data-bind='foreach: getStore().getTypes')
                li(data-bind='visible: isInMenu()')
                  a(href='#', data-bind='click: $parent.chooseType')
                    span(data-bind='text: name')
                    |  -
                    span(data-bind='text: uri')

    .container-fluid
      .row-fluid
        .col-xs-3
          p(data-bind='visible: !getStore().getType()') type info
          section(data-bind='with: getStore().getType')
            h2
              img(data-bind='attr: {src: icon}')
              span(data-bind='text: name, attr: {id: id}')
              if debug
                |  r:
                span(data-bind='text: depth')
                |  c:
                span(data-bind='text: cols')
                |  d:
                span(data-bind='text: depth')
            span(data-bind='text: uri')
            section(data-bind='visible: parentTypes.length > 0')
              h3 Parent types
              ul(data-bind='foreach: parentTypes')
                li
                  a(href='#', data-bind='text: name, click: $root.chooseType')
                  if debug
                    | » r:
                    span(data-bind='text: rows')
                    |  c:
                    span(data-bind='text: cols')
                    |  d:
                    span(data-bind='text: depth')
            section(data-bind='visible: childTypes.length > 0')
              h3 Childs
              ul(data-bind='foreach: childTypes')
                li(data-bind='template: { name: "childTypeTemplate", data: { c: $data, p: $parent } }')
        .col-xs-9
          p(data-bind='visible: !getStore().getType()') choose a type
          p(data-bind='visible: getStore().getTopics().length == 0') empty topic list
          table.table.table-bordered(data-bind='visible: getStore().getTopics().length > 0')
            thead(data-bind='foreach: getStore().getHeaderRows')
              tr(data-bind='foreach: $data')
                // ko if: isVisible()
                th(data-bind='attr: { colspan: cols, rowspan: rows }')
                  span(data-bind='text: type.name')
                // /ko
            // ko foreach: getStore().getTopics
            tbody(data-bind='attr: { id: id }')
              tr
                th
                  span(data-bind='text: value')
                // ko template: { name: "compositeTemplate", foreach: composite }
                // /ko
            // /ko
